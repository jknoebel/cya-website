# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE.
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Set up secrets in your workspace: GKE_PROJECT with the name of the project, GKE_EMAIL with the service account email, GKE_KEY with the service account key.
#
# 3. Change the values for the GKE_ZONE, GKE_CLUSTER and IMAGE environment variables (below).

name: Deploy to Google Cloud Run

on:
  push:
    branches:
    - master

# Environment variables available to all jobs and steps in this workflow
env:
  GKE_PROJECT: ${{ secrets.GKE_PROJECT }}
  GITHUB_SHA: ${{ github.sha }}
  GKE_ZONE: us-central1
  GKE_CLUSTER: example-gke-cluster
  IMAGE: website

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@master

    - uses: actions/setup-node@v1
      with:
        node-version: '10.x'
        registry-url: 'https://registry.npmjs.org'

    # Create production build
    - run: yarn install
    - run: yarn build

    # Setup gcloud CLI
    - name: Authenticate into Google Cloud Platform
      uses: actions/gcloud/auth@master
      env:
        GCLOUD_AUTH: ${{ secrets.GKE_KEY }}
      
    # Build and push the Docker image
    - name: Build
      uses: actions/gcloud/cli@master
      with: |        
        args: builds submit --tag gcr.io/"$GKE_PROJECT"/"$IMAGE":"$GITHUB_SHA"

    # Deploy the Docker image
    - name: Publish
      uses: actions/gcloud/cli@master
      with: |        
        args: beta run deploy --image gcr.io/$GKE_PROJECT/$IMAGE:$GITHUB_SHA
